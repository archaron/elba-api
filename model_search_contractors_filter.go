/*
Elba Public API

  ## С чего начать    Для работы с API нужно выпустить API-ключ — уникальный токен, позволяющий авторизовывать ваши запросы в API Контур.Эльбы.    #### Как получить API-ключ    1. Откройте Эльбу, в верхнем правом углу нажмите «Настройки и оплата» → «Настройки сервиса».  2. Перейдите на вкладку «API».  2. Нажмите на кнопку «Выпустить ключ». После этого откроется окно со сгенерированным API-ключом.  3. В открывшемся окне появится ваш API-ключ. Скопируйте и сохраните его в надежном месте, потому что он будет показан только один раз. Это сделано в целях безопасности — мы не храним ключи на своей стороне.

API version: v1
Contact: e@kontur.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package elba

import (
	"encoding/json"
)

// checks if the SearchContractorsFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchContractorsFilter{}

// SearchContractorsFilter struct for SearchContractorsFilter
type SearchContractorsFilter struct {
	// ИНН
	Inn NullableString `json:"inn,omitempty"`
	// КПП
	Kpp NullableString `json:"kpp,omitempty"`
	// Название контрагента
	Name NullableString `json:"name,omitempty"`
}

// NewSearchContractorsFilter instantiates a new SearchContractorsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchContractorsFilter() *SearchContractorsFilter {
	this := SearchContractorsFilter{}
	return &this
}

// NewSearchContractorsFilterWithDefaults instantiates a new SearchContractorsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchContractorsFilterWithDefaults() *SearchContractorsFilter {
	this := SearchContractorsFilter{}
	return &this
}

// GetInn returns the Inn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchContractorsFilter) GetInn() string {
	if o == nil || IsNil(o.Inn.Get()) {
		var ret string
		return ret
	}
	return *o.Inn.Get()
}

// GetInnOk returns a tuple with the Inn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchContractorsFilter) GetInnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inn.Get(), o.Inn.IsSet()
}

// HasInn returns a boolean if a field has been set.
func (o *SearchContractorsFilter) HasInn() bool {
	if o != nil && o.Inn.IsSet() {
		return true
	}

	return false
}

// SetInn gets a reference to the given NullableString and assigns it to the Inn field.
func (o *SearchContractorsFilter) SetInn(v string) {
	o.Inn.Set(&v)
}
// SetInnNil sets the value for Inn to be an explicit nil
func (o *SearchContractorsFilter) SetInnNil() {
	o.Inn.Set(nil)
}

// UnsetInn ensures that no value is present for Inn, not even an explicit nil
func (o *SearchContractorsFilter) UnsetInn() {
	o.Inn.Unset()
}

// GetKpp returns the Kpp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchContractorsFilter) GetKpp() string {
	if o == nil || IsNil(o.Kpp.Get()) {
		var ret string
		return ret
	}
	return *o.Kpp.Get()
}

// GetKppOk returns a tuple with the Kpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchContractorsFilter) GetKppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Kpp.Get(), o.Kpp.IsSet()
}

// HasKpp returns a boolean if a field has been set.
func (o *SearchContractorsFilter) HasKpp() bool {
	if o != nil && o.Kpp.IsSet() {
		return true
	}

	return false
}

// SetKpp gets a reference to the given NullableString and assigns it to the Kpp field.
func (o *SearchContractorsFilter) SetKpp(v string) {
	o.Kpp.Set(&v)
}
// SetKppNil sets the value for Kpp to be an explicit nil
func (o *SearchContractorsFilter) SetKppNil() {
	o.Kpp.Set(nil)
}

// UnsetKpp ensures that no value is present for Kpp, not even an explicit nil
func (o *SearchContractorsFilter) UnsetKpp() {
	o.Kpp.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchContractorsFilter) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchContractorsFilter) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SearchContractorsFilter) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SearchContractorsFilter) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SearchContractorsFilter) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SearchContractorsFilter) UnsetName() {
	o.Name.Unset()
}

func (o SearchContractorsFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchContractorsFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Inn.IsSet() {
		toSerialize["inn"] = o.Inn.Get()
	}
	if o.Kpp.IsSet() {
		toSerialize["kpp"] = o.Kpp.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return toSerialize, nil
}

type NullableSearchContractorsFilter struct {
	value *SearchContractorsFilter
	isSet bool
}

func (v NullableSearchContractorsFilter) Get() *SearchContractorsFilter {
	return v.value
}

func (v *NullableSearchContractorsFilter) Set(val *SearchContractorsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchContractorsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchContractorsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchContractorsFilter(val *SearchContractorsFilter) *NullableSearchContractorsFilter {
	return &NullableSearchContractorsFilter{value: val, isSet: true}
}

func (v NullableSearchContractorsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchContractorsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


