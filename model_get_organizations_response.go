/*
Elba Public API

  ## С чего начать    Для работы с API нужно выпустить API-ключ — уникальный токен, позволяющий авторизовывать ваши запросы в API Контур.Эльбы.    #### Как получить API-ключ    1. Откройте Эльбу, в верхнем правом углу нажмите «Настройки и оплата» → «Настройки сервиса».  2. Перейдите на вкладку «API».  2. Нажмите на кнопку «Выпустить ключ». После этого откроется окно со сгенерированным API-ключом.  3. В открывшемся окне появится ваш API-ключ. Скопируйте и сохраните его в надежном месте, потому что он будет показан только один раз. Это сделано в целях безопасности — мы не храним ключи на своей стороне.

API version: v1
Contact: e@kontur.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package elba

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetOrganizationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationsResponse{}

// GetOrganizationsResponse struct for GetOrganizationsResponse
type GetOrganizationsResponse struct {
	// Список доступных организаций
	Organizations []Organization `json:"organizations"`
}

type _GetOrganizationsResponse GetOrganizationsResponse

// NewGetOrganizationsResponse instantiates a new GetOrganizationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationsResponse(organizations []Organization) *GetOrganizationsResponse {
	this := GetOrganizationsResponse{}
	this.Organizations = organizations
	return &this
}

// NewGetOrganizationsResponseWithDefaults instantiates a new GetOrganizationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationsResponseWithDefaults() *GetOrganizationsResponse {
	this := GetOrganizationsResponse{}
	return &this
}

// GetOrganizations returns the Organizations field value
func (o *GetOrganizationsResponse) GetOrganizations() []Organization {
	if o == nil {
		var ret []Organization
		return ret
	}

	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value
// and a boolean to check if the value has been set.
func (o *GetOrganizationsResponse) GetOrganizationsOk() ([]Organization, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organizations, true
}

// SetOrganizations sets field value
func (o *GetOrganizationsResponse) SetOrganizations(v []Organization) {
	o.Organizations = v
}

func (o GetOrganizationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["organizations"] = o.Organizations
	return toSerialize, nil
}

func (o *GetOrganizationsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organizations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetOrganizationsResponse := _GetOrganizationsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetOrganizationsResponse)

	if err != nil {
		return err
	}

	*o = GetOrganizationsResponse(varGetOrganizationsResponse)

	return err
}

type NullableGetOrganizationsResponse struct {
	value *GetOrganizationsResponse
	isSet bool
}

func (v NullableGetOrganizationsResponse) Get() *GetOrganizationsResponse {
	return v.value
}

func (v *NullableGetOrganizationsResponse) Set(val *GetOrganizationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationsResponse(val *GetOrganizationsResponse) *NullableGetOrganizationsResponse {
	return &NullableGetOrganizationsResponse{value: val, isSet: true}
}

func (v NullableGetOrganizationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


