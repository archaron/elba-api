/*
Elba Public API

  ## С чего начать    Для работы с API нужно выпустить API-ключ — уникальный токен, позволяющий авторизовывать ваши запросы в API Контур.Эльбы.    #### Как получить API-ключ    1. Откройте Эльбу, в верхнем правом углу нажмите «Настройки и оплата» → «Настройки сервиса».  2. Перейдите на вкладку «API».  2. Нажмите на кнопку «Выпустить ключ». После этого откроется окно со сгенерированным API-ключом.  3. В открывшемся окне появится ваш API-ключ. Скопируйте и сохраните его в надежном месте, потому что он будет показан только один раз. Это сделано в целях безопасности — мы не храним ключи на своей стороне.

API version: v1
Contact: e@kontur.ru
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package elba

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillPaymentNewsContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillPaymentNewsContent{}

// BillPaymentNewsContent struct for BillPaymentNewsContent
type BillPaymentNewsContent struct {
	// Идентификатор счёта
	BillId string `json:"billId"`
	// Статус оплаченности счёта.  notPaid (Не оплачен)  paid (Оплачен)  partiallyPaid (Частично оплачен)  rejected (Отменён)  overdue (Истёк срок оплаты)
	BillStatus BillStatus `json:"billStatus"`
	// Сумма привязанных к счёту операций
	RelatedPaymentsSum float64 `json:"relatedPaymentsSum"`
	// Сумма счёта
	BillSum float64 `json:"billSum"`
}

type _BillPaymentNewsContent BillPaymentNewsContent

// NewBillPaymentNewsContent instantiates a new BillPaymentNewsContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillPaymentNewsContent(billId string, billStatus BillStatus, relatedPaymentsSum float64, billSum float64) *BillPaymentNewsContent {
	this := BillPaymentNewsContent{}
	this.BillId = billId
	this.BillStatus = billStatus
	this.RelatedPaymentsSum = relatedPaymentsSum
	this.BillSum = billSum
	return &this
}

// NewBillPaymentNewsContentWithDefaults instantiates a new BillPaymentNewsContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillPaymentNewsContentWithDefaults() *BillPaymentNewsContent {
	this := BillPaymentNewsContent{}
	return &this
}

// GetBillId returns the BillId field value
func (o *BillPaymentNewsContent) GetBillId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillId
}

// GetBillIdOk returns a tuple with the BillId field value
// and a boolean to check if the value has been set.
func (o *BillPaymentNewsContent) GetBillIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillId, true
}

// SetBillId sets field value
func (o *BillPaymentNewsContent) SetBillId(v string) {
	o.BillId = v
}

// GetBillStatus returns the BillStatus field value
func (o *BillPaymentNewsContent) GetBillStatus() BillStatus {
	if o == nil {
		var ret BillStatus
		return ret
	}

	return o.BillStatus
}

// GetBillStatusOk returns a tuple with the BillStatus field value
// and a boolean to check if the value has been set.
func (o *BillPaymentNewsContent) GetBillStatusOk() (*BillStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillStatus, true
}

// SetBillStatus sets field value
func (o *BillPaymentNewsContent) SetBillStatus(v BillStatus) {
	o.BillStatus = v
}

// GetRelatedPaymentsSum returns the RelatedPaymentsSum field value
func (o *BillPaymentNewsContent) GetRelatedPaymentsSum() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.RelatedPaymentsSum
}

// GetRelatedPaymentsSumOk returns a tuple with the RelatedPaymentsSum field value
// and a boolean to check if the value has been set.
func (o *BillPaymentNewsContent) GetRelatedPaymentsSumOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelatedPaymentsSum, true
}

// SetRelatedPaymentsSum sets field value
func (o *BillPaymentNewsContent) SetRelatedPaymentsSum(v float64) {
	o.RelatedPaymentsSum = v
}

// GetBillSum returns the BillSum field value
func (o *BillPaymentNewsContent) GetBillSum() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.BillSum
}

// GetBillSumOk returns a tuple with the BillSum field value
// and a boolean to check if the value has been set.
func (o *BillPaymentNewsContent) GetBillSumOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillSum, true
}

// SetBillSum sets field value
func (o *BillPaymentNewsContent) SetBillSum(v float64) {
	o.BillSum = v
}

func (o BillPaymentNewsContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillPaymentNewsContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["billId"] = o.BillId
	toSerialize["billStatus"] = o.BillStatus
	toSerialize["relatedPaymentsSum"] = o.RelatedPaymentsSum
	toSerialize["billSum"] = o.BillSum
	return toSerialize, nil
}

func (o *BillPaymentNewsContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"billId",
		"billStatus",
		"relatedPaymentsSum",
		"billSum",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillPaymentNewsContent := _BillPaymentNewsContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillPaymentNewsContent)

	if err != nil {
		return err
	}

	*o = BillPaymentNewsContent(varBillPaymentNewsContent)

	return err
}

type NullableBillPaymentNewsContent struct {
	value *BillPaymentNewsContent
	isSet bool
}

func (v NullableBillPaymentNewsContent) Get() *BillPaymentNewsContent {
	return v.value
}

func (v *NullableBillPaymentNewsContent) Set(val *BillPaymentNewsContent) {
	v.value = val
	v.isSet = true
}

func (v NullableBillPaymentNewsContent) IsSet() bool {
	return v.isSet
}

func (v *NullableBillPaymentNewsContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillPaymentNewsContent(val *BillPaymentNewsContent) *NullableBillPaymentNewsContent {
	return &NullableBillPaymentNewsContent{value: val, isSet: true}
}

func (v NullableBillPaymentNewsContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillPaymentNewsContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


